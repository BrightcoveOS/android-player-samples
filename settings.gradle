// For building exoplayer-specific sample apps, which are located under the 'brightcove-exoplayer' directory.
include ':brightcove-exoplayer:360VideoSampleApp'
include ':brightcove-exoplayer:BasicCastBrightcoveReceiverSampleApp'
include ':brightcove-exoplayer:BasicDAISampleApp'
include ':brightcove-exoplayer:AdRulesIMASampleApp'
include ':brightcove-exoplayer:AdRulesIMAWidevineModularSampleApp'
include ':brightcove-exoplayer:AppCompatActivitySampleApp'
include ':brightcove-exoplayer:AppCompatFragmentSampleApp'
include ':brightcove-exoplayer:BasicSsaiSampleApp'
include ':brightcove-exoplayer:BasicSampleApp'
include ':brightcove-exoplayer:LiveSampleApp'
include ':brightcove-exoplayer:OfflinePlaybackSampleApp'
include ':brightcove-exoplayer:PictureInPictureSampleApp'
include ':brightcove-exoplayer:TextureViewSampleApp'
include ':brightcove-exoplayer:WidevineModularSampleApp'
include ':brightcove-exoplayer:VideoListSampleApp'
include ':brightcove-exoplayer:VideoListAdRulesIMASampleApp'
include ':brightcove-exoplayer:BasicIMAVASTSampleApp'
include ':brightcove-exoplayer:ThumbnailScrubberSampleApp'
include ':brightcove-exoplayer:AudioOnlySampleApp'
include ':brightcove-exoplayer:BumperSampleApp'
include ':brightcove-exoplayer:BasicSSAIPALSampleApp'

// Set of Kotlin apps
include ':brightcove-exoplayer-kotlin:AudioOnlySampleApp'
include ':brightcove-exoplayer-kotlin:BasicSampleApp'
include ':brightcove-exoplayer-kotlin:VideoListSampleApp'
include ':brightcove-exoplayer-kotlin:AdRulesIMASampleApp'
include ':brightcove-exoplayer-kotlin:AdRulesIMAWidevineModularSampleApp'
include ':brightcove-exoplayer-kotlin:AppCompatActivitySampleApp'
include ':brightcove-exoplayer-kotlin:AppCompatFragmentSampleApp'
include ':brightcove-exoplayer-kotlin:BasicSsaiSampleApp'
include ':brightcove-exoplayer-kotlin:LiveSampleApp'
include ':brightcove-exoplayer-kotlin:BasicCastBrightcoveReceiverSampleApp'
include ':brightcove-exoplayer-kotlin:BasicIMAVASTSampleApp'
include ':brightcove-exoplayer-kotlin:PictureInPictureSampleApp'
include ':brightcove-exoplayer-kotlin:TextureViewSampleApp'
include ':brightcove-exoplayer-kotlin:BasicSsaiPALSampleApp'
include ':brightcove-exoplayer-kotlin:BumperSampleApp'
include ':brightcove-exoplayer-kotlin:BasicDAISampleApp'
include ':brightcove-exoplayer-kotlin:ThumbnailScrubberSampleApp'
include ':brightcove-exoplayer-kotlin:VideoListAdRulesIMASampleApp'
include ':brightcove-exoplayer-kotlin:WidevineModularSampleApp'
include ':brightcove-exoplayer-kotlin:OfflinePlaybackSampleApp'
include ':brightcove-exoplayer-kotlin:FreeWheelSampleApp'
include ':brightcove-exoplayer-kotlin:FreeWheelWidevineModularSampleApp'

// For building Brightcove Player Controls specific sample apps, which are located under the 'brightcove-player-controls' directory.
include ':brightcove-player-controls:CustomizedControlsSampleApp'
include ':brightcove-player-controls:StyledControlsSampleApp'
include ':brightcove-player-controls:RewindArrowLeftSampleApp'
include ':brightcove-player-controls:RewindBackwardSampleApp'
include ':brightcove-player-controls:RewindStepBackwardSampleApp'
include ':brightcove-player-controls:SeekBarColorsSampleApp'

// FreeWheel samples require AdManager.aar v6.28.0 to be added to the libs
// folder under your home directory.
// This aar archive must be acquired from FreeWheel by you.
if (freewheelDependenciesAreSatisfied()) {
    include ':brightcove-exoplayer:FreeWheelSampleApp'
    include ':brightcove-exoplayer:FreeWheelWidevineModularSampleApp'
}

if (pulseDependenciesAreSatisfied()) {
    include ':brightcove-exoplayer:PulseSampleApp'
}

boolean freewheelDependenciesAreSatisfied() {
    File dep = file("${System.getProperty("user.home")}/libs/AdManager.aar")
    return dep.exists()
}

boolean pulseDependenciesAreSatisfied() {
    File dep = file("${System.getProperty("user.home")}/libs/Pulse.aar")
    return dep.exists()
}

// Local SDK development support
// Set anpVersion to:
//   - Normal version: "10.2.2" (uses published artifacts)  
//   - Local with default path: "LOCAL" (uses ../videocloud_android-native-player)
//   - Local with custom path: "LOCAL:/path/to/sdk" (uses specified path)

def localSdkPath = null
def useLocalSdk = false

if (anpVersion.startsWith('LOCAL')) {
    useLocalSdk = true
    if (anpVersion.contains(':')) {
        // LOCAL:/path/to/sdk format
        localSdkPath = anpVersion.substring(anpVersion.indexOf(':') + 1)
    } else {
        // Just "LOCAL" - use default path
        localSdkPath = '../videocloud_android-native-player'
    }
}

if (useLocalSdk) {
    if (file(localSdkPath).exists()) {
        println "Found local SDK at ${localSdkPath} - enabling composite build for seamless development"
        
        includeBuild(localSdkPath) {
            dependencySubstitution {
                substitute module('com.brightcove.player:android-sdk') using project(':sdk')
                substitute module('com.brightcove.player:exoplayer2') using project(':players:exoplayer2')
                substitute module('com.brightcove.player:android-ima-plugin') using project(':plugins:ima')
                substitute module('com.brightcove.player:android-dai-plugin') using project(':plugins:ima-dai')
                substitute module('com.brightcove.player:android-ssai-plugin') using project(':plugins:ssai')
                substitute module('com.brightcove.player:android-cast-plugin') using project(':plugins:cast')
                substitute module('com.brightcove.player:android-freewheel-plugin') using project(':plugins:freewheel')
                substitute module('com.brightcove.player:android-pulse-plugin') using project(':plugins:pulse')
                substitute module('com.brightcove.player:android-omniture-plugin') using project(':plugins:omniture')
                substitute module('com.brightcove.player:android-appcompat-plugin') using project(':plugins:appcompat')
                substitute module('com.brightcove.player:android-thumbnail-plugin') using project(':plugins:thumbnail')
                substitute module('com.brightcove.player:offline-playback') using project(':plugins:offline-playback')
                substitute module('com.brightcove.player:android-playback-notification-plugin') using project(':plugins:playback-notification')
            }
        }
    } else {
        throw new GradleException("Local SDK not found at ${localSdkPath}. Please check the path or use a published version instead.")
    }
} else {
    println "Using published Maven artifacts version: ${anpVersion}"
}


